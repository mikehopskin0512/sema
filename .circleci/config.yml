version: '2.1'
orbs:
  slack: circleci/slack@4.1
jobs:
  deploy-web:
    environment:
      AWS_REGION: us-east-1
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - run:
          name: install utilities
          command: sudo apt-get update -y && sudo apt-get install awscli -y && sudo apt-get install jq -y
      - setup_remote_docker:
          version: 18.09.3
      - run:
          name: create phoenix profile for aws cli
          command: printf "%s\n%s\n"${AWS_REGION}"\njson" "$AWS_ACCESS_KEY_ID" "$AWS_SECRET_ACCESS_KEY" | aws configure --profile phoenix
      - run:
          name: set deployment environment
          command: |
            if [ $CIRCLE_BRANCH = "master" ]; then
              echo 'export ENV=prod' >> $BASH_ENV
            else
              echo 'export ENV=qa' >> $BASH_ENV
            fi
      - run:
          name: build and deploy phoenix/web
          command: cd web && ./build-and-deploy.sh $ENV
          
  deploy-apollo:
    environment:
      AWS_REGION: us-east-1
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - run:
          name: install utilities
          command: sudo apt-get update -y && sudo apt-get install awscli -y && sudo apt-get install jq -y
      - setup_remote_docker:
          version: 18.09.3
      - run:
          name: create phoenix profile for aws cli
          command: printf "%s\n%s\n"${AWS_REGION}"\njson" "$AWS_ACCESS_KEY_ID" "$AWS_SECRET_ACCESS_KEY" | aws configure --profile phoenix
      - run:
          name: set deployment environment
          command: |
            if [ $CIRCLE_BRANCH = "master" ]; then
              echo 'export ENV=prod' >> $BASH_ENV
            else
              echo 'export ENV=qa' >> $BASH_ENV
            fi
      - run:
          name: build and deploy apollo
          command: cd apollo && ./build-and-deploy.sh $ENV

  build-chrome-extension:
    docker:
      - image: cimg/node:15.14.0
    steps:
      - checkout
      - run:
          name: install python
          command: sudo apt-get update -y && sudo apt-get install -y python
      - run:
          name: set deployment environment
          command: |
            if [ $CIRCLE_BRANCH = "master" ]; then
              echo 'export ENV=prod' >> $BASH_ENV
            else
              echo 'export ENV=qa' >> $BASH_ENV
            fi
      - run:
          name: build chrome extension
          command: cd themis && ./build.sh $ENV
      - run:
          name: install utilities
          command: sudo apt-get update -y && sudo apt-get install awscli
      - run:
          name: create phoenix profile for aws cli
          command: printf "%s\n%s\n"${AWS_REGION}"\njson" "$AWS_ACCESS_KEY_ID" "$AWS_SECRET_ACCESS_KEY" | aws configure --profile phoenix
      - run:
          name: push the extension file to s3
          command: filename=$(ls themis | grep Sema_Code_Review_Assistant_ | head -1) && aws s3 cp themis/$filename s3://$ENV-chrome-store/$filename --profile phoenix
  
  notify:
    docker:
        - image: cimg/base:2020.01
    steps: 
      - checkout
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: "support"
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1
workflows:
  version: 2
  primary:
    jobs:
      - deploy-web:
          filters:
            branches:
              only:
                - qa
                - master
      - deploy-apollo:
          filters:
            branches:
              only:
                - qa
                - master
      - build-chrome-extension:
          filters:
            branches:
              only:
                - qa
                - master
                - PHX-1455
      - notify:
          context: 
           - slack-secrets
          filters:
            branches:
              only:
                - qa
                - master
                - PHX-1455
          requires:
            - build-chrome-extension
