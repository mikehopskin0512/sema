openapi: 3.0.0
info:
  title: Teams' API
  description: Teams
  version: 1.0.0
servers:
  - url: http://localhost:3001
    description: Local Dev
  - url: https://api-qa.semasoftware.com
    description: QA
  - url: https://api-staging.semasoftware.com
    description: staging
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Team:
      properties:
        _id:
          type: string
        avatarUrl:
          type: string
        collections:
          items:
            properties:
              collectionData:
                type: string
              isActive:
                type: boolean
            required: [ ]
            type: object
          type: array
        createdBy:
          type: string
        createdAt:
          format: date-time
          type: string
    Repository:
      properties:
        _id:
          type: string
        cloneUrl:
          type: string
        description:
          type: string
        externalId:
          type: string
        language:
          type: string
        legacyId:
          type: string
        name:
          type: string
        orgId:
          type: string
        repoStats:
          properties:
            reactions:
              items:
                properties:
                  _id:
                    type: string
                  createdAt:
                    format: date-time
                    type: string
                  reactionId:
                    type: string
                  smartCommentId:
                    type: string
                required:
                  - reactionId
                  - smartCommentId
                type: object
              type: array
            semaUsers:
              type: number
            smartCodeReviews:
              type: number
            smartCommenters:
              type: number
            smartComments:
              type: number
            tags:
              items:
                properties:
                  _id:
                    type: string
                  createdAt:
                    format: date-time
                    type: string
                  smartCommentId:
                    type: string
                  tagsId:
                    items:
                      type: string
                    type: array
                required:
                  - smartCommentId
                type: object
              type: array
            userIds:
              items:
                type: string
              type: array
          type: object
        repositoryCreatedAt:
          format: date-time
          type: string
        repositoryUpdatedAt:
          format: date-time
          type: string
        sourceId:
          type: string
        type:
          enum:
            - github
            - bitbucket
            - direct
          type: string
      required:
        - externalId
        - type
      title: Repository
security:
  - bearerAuth: []
paths:
  /v1/teams:
    get:
      summary: get teams by user id
      operationId: getTeamsByUser
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: search results matching criteria
        400:
          description: array of user's teams
    post:
      summary: create a team
      operationId: createTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: created team
    put:
      summary: update a team
      operationId: updateTeam
      requestBody:
        content:
          application/json:
            schema:
              properties:
                _id:
                  type: string
                action:
                  type: string
                avatarUrl:
                  type: string
                collections:
                  items:
                    properties:
                      collectionData:
                        type: string
                      isActive:
                        type: boolean
                    required: [ ]
                    type: object
                  type: array
                createdBy:
                  type: string
                createdAt:
                  format: date-time
                  type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: updated team
        400:
          description: bad input parameter
  /v1/teams/{teamId}/repositories:
    get:
      summary: get team's repos
      operationId: getTeamRepos
      parameters:
        - in: path
          name: teamId
          description: team id
          required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
          description: search results matching criteria
        400:
          description: bad input parameter
    put:
      summary: update a team's repo
      operationId: updateTeamRepos
      parameters:
        - in: path
          name: teamId
          description: team id
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repository'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
          description: team's repo updated
        400:
          description: bad input parameter
  /v1/teams/{teamId}/metrics:
    get:
      summary: get team's metrics
      operationId: getTeamMetrics
      parameters:
        - in: path
          name: teamId
          description: team id
          required: true
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  smartComments:
                    type: number
                  smartCodeReviews:
                    type: number
                  smartCommenters:
                    type: number
          description: team's metrics - usage
        400:
          description: bad input parameter
  /v1/teams/{teamId}/members:
    get:
      summary: get team's members
      operationId: getTeamMembers
      parameters:
        - in: path
          name: teamId
          description: team id
          required: true
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  members:
                    type: object
                  totalCount:
                    type: number
          description: array of users and that total number of members
        400:
          description: bad input parameter
  /v1/teams/{teamId}/invite:
    get:
      summary: invite user to join team
      operationId: addTeamMembers
      parameters:
        - in: path
          name: teamId
          description: team id
          required: true
      responses:
        200:
          description: user inivited
        400:
          description: bad input parameter